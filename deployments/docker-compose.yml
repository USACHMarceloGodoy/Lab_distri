services:
  zookeeper:
    restart: always
    image: bitnami/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network
  kafka:
    restart: always
    image: bitnami/kafka
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    networks:
      - app-network
    depends_on:
      - zookeeper
  rtmp-server:
    restart: always
    image: polloh/rtmp-server    
    ports:
      - "1935:1935"
    networks:
      - app-network    
  transcoding-server:
    restart: always
    image: polloh/transcoding-server    
    privileged: true 
    ports:
      - "2049:2049"     
      - "8080:8080"
    volumes:
      - nfs-share:/srv/nfs   
    networks:
      - app-network    
  distribution-server:
    restart: always
    image: polloh/distribution-server
    privileged: true 
    volumes:
      - nfs-share:/mnt/nfs   
    depends_on:
      - transcoding-server
    ports:
     - "3000:3000"
    networks:
      - app-network    
  chat-server:
    restart: always
    image: polloh/chat-server            
    privileged: true 
    ports:
     - "9090:9090"
    networks:
      - app-network 
  message-server:
    restart: always
    image: polloh/message-server            
    privileged: true 
    ports:
     - "9091:9091"
    networks:
      - app-network  
  general-server:
    restart: always
    image: polloh/general-server    
    ports:
     - "9092:9092"
    networks:
      - app-network  
  stream-frontend:
    restart: always
    image: polloh/stream-frontend            
    ports:
     - "5173:5173"
    networks:
      - app-network   
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    networks:
      - app-network    
    volumes:
      - ./init.js:/docker-entrypoint-initdb.d/init.js:ro
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - app-network    
  general-db:
    image: postgres  
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: initialdb
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
volumes:
  nfs-share:
  kafka-volume:
  zookeeper-volume:
networks:
  app-network:
    driver: bridge